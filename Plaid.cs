// <auto-generated />
//
// To parse this JSON data, add NuGet 'Newtonsoft.Json' then do one of these:
//
//    using Plaid;
//
//    var accountsGetRequest = AccountsGetRequest.FromJson(jsonString);
//    var authGetRequest = AuthGetRequest.FromJson(jsonString);
//    var transactionsGetRequest = TransactionsGetRequest.FromJson(jsonString);

namespace Plaid
{
    using System;
    using System.Collections.Generic;

    using System.Globalization;
    using Newtonsoft.Json;
    using Newtonsoft.Json.Converters;

    public partial class AuthGetRequest
    {
        [JsonProperty("client_id")]
        public string ClientId { get; set; }

        [JsonProperty("secret")]
        public string Secret { get; set; }

        [JsonProperty("access_token")]
        public string AccessToken { get; set; }

        [JsonProperty("options", NullValueHandling = NullValueHandling.Ignore)]
        public AccountsGetRequestOptions Options { get; set; }
    }

    public partial class AccountsGetRequestOptions
    {
        [JsonProperty("account_ids")]
        public string[] AccountIds { get; set; }
    }

    public partial class TransactionsGetRequest
    {
        [JsonProperty("client_id")]
        public string ClientId { get; set; }

        [JsonProperty("secret")]
        public string Secret { get; set; }

        [JsonProperty("access_token")]
        public string AccessToken { get; set; }

        [JsonProperty("start_date")]
        public DateTimeOffset StartDate { get; set; }

        [JsonProperty("end_date")]
        public DateTimeOffset EndDate { get; set; }

        [JsonProperty("options")]
        public TransactionsGetRequestOptions Options { get; set; }
    }

    public partial class TransactionsGetRequestOptions
    {
        [JsonProperty("account_ids")]
        public string[] AccountIds { get; set; }

        [JsonProperty("count")]
        public long Count { get; set; }

        [JsonProperty("offset")]
        public long Offset { get; set; }
    }

    public partial class AccountsGetRequest
    {
        public static AuthGetRequest FromJson(string json) => JsonConvert.DeserializeObject<AuthGetRequest>(json, Plaid.Converter.Settings);
    }

    public partial class AuthGetRequest
    {
        public static AuthGetRequest FromJson(string json) => JsonConvert.DeserializeObject<AuthGetRequest>(json, Plaid.Converter.Settings);
    }

    public partial class TransactionsGetRequest
    {
        public static TransactionsGetRequest FromJson(string json) => JsonConvert.DeserializeObject<TransactionsGetRequest>(json, Plaid.Converter.Settings);
    }

    public static class Serialize
    {
        public static string ToJson(this AuthGetRequest self) => JsonConvert.SerializeObject(self, Plaid.Converter.Settings);
        public static string ToJson(this TransactionsGetRequest self) => JsonConvert.SerializeObject(self, Plaid.Converter.Settings);
    }

    internal static class Converter
    {
        public static readonly JsonSerializerSettings Settings = new JsonSerializerSettings
        {
            MetadataPropertyHandling = MetadataPropertyHandling.Ignore,
            DateParseHandling = DateParseHandling.None,
            Converters =
            {
                new IsoDateTimeConverter { DateTimeStyles = DateTimeStyles.AssumeUniversal }
            },
        };
    }
}
